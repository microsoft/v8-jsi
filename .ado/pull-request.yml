name: v8jsi_0.0.$(Date:yyMM.d)$(Rev:rrr)

#TODO: Uncomment before merging into master
# trigger:
# - master
# - "*-stable"

# pr:
#   - master
#   - "*-stable"

pool:
  vmImage: 'windows-2019'

jobs:
  - job: V8JsiBuild
    timeoutInMinutes: 180
    displayName: Build and publish v8jsi.dll
    strategy:
      matrix:
        Desktop|x64|Debug:
          BuildConfiguration: Debug
          BuildPlatform: x64
          AppPlatform: win32
        Desktop|x86|Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
          AppPlatform: win32
        Desktop|ARM64|Debug:
          BuildConfiguration: Debug
          BuildPlatform: arm64
          AppPlatform: win32
        Desktop|x64|Release:
          BuildConfiguration: Release
          BuildPlatform: x64
          AppPlatform: win32
        Desktop|x86|Release:
          BuildConfiguration: Release
          BuildPlatform: x86
          AppPlatform: win32
        Desktop|ARM64|Release:
          BuildConfiguration: Release
          BuildPlatform: arm64
          AppPlatform: win32
        Universal|x64|Debug:
          BuildConfiguration: Debug
          BuildPlatform: x64
          AppPlatform: uwp
        Universal|x86|Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
          AppPlatform: uwp
        Universal|ARM64|Debug:
          BuildConfiguration: Debug
          BuildPlatform: arm64
          AppPlatform: uwp
        Universal|x64|Release:
          BuildConfiguration: Release
          BuildPlatform: x64
          AppPlatform: uwp
        Universal|x86|Release:
          BuildConfiguration: Release
          BuildPlatform: x86
          AppPlatform: uwp
        Universal|ARM64|Release:
          BuildConfiguration: Release
          BuildPlatform: arm64
          AppPlatform: uwp

    steps:
      - pwsh: |
          $vars = @{
            'win32' = @{
              'RunUnitTests' = $true
              'NuGetId' = 'ReactNative.V8Jsi.Windows'
            };
            'uwp' = @{
              'RunUnitTests' = $false
              'NuGetId' = 'ReactNative.V8Jsi.Windows.UWP'
            }
          }
          Write-Host "Setting variables for app platform ${env:AppPlatform}"
          Write-Host "##vso[task.setvariable variable=RunUnitTests]$($vars[$env:AppPlatform]['RunUnitTests'])"
          Write-Host "##vso[task.setvariable variable=NuGetId]$($vars[$env:AppPlatform]['NuGetId'])"
        displayName: Set AppPlatform-dependent variables

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '2.x'
          addToPath: true
          architecture: 'x64'
      - template: build-dll.yml
        parameters:
          outputPath: $(Build.ArtifactStagingDirectory)
          appPlatform: $(AppPlatform)

  - job: V8JsiPublishNuget
    dependsOn:
      - V8JsiBuild
    displayName: Publish Nuget
    steps:
      - checkout: none

      - task: NuGetToolInstaller@0
        inputs:
          versionSpec: ">=4.6.0"

      - task: DownloadBuildArtifacts@0
        displayName: Download Build outputs
        inputs:
          artifactName: V8Jsi
          downloadPath: $(System.DefaultWorkingDirectory)

      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            $config = Get-Content (Join-Path $(System.DefaultWorkingDirectory) "V8Jsi\config.json") | ConvertFrom-Json
            $Version = $config.version
            Write-Host "##vso[task.setvariable variable=Version]$Version"
        displayName: Retrieve V8 version

      - task: NuGetCommand@2
        displayName: 'NuGet Pack'
        inputs:
          command: pack
          packagesToPack: $(System.DefaultWorkingDirectory)\V8Jsi\ReactNative.V8Jsi.Windows.nuspec
          packDestination: $(System.DefaultWorkingDirectory)\NugetRootFinal
          buildProperties: Id=$(NuGetId);CommitId=$(Build.SourceVersion);nugetroot=$(System.DefaultWorkingDirectory)\V8Jsi;RepoUri=$(Build.Repository.Uri)
          versioningScheme: byEnvVar
          versionEnvVar: Version
          includeSymbols: true

      - task: PublishBuildArtifacts@1
        displayName: "Publish final nuget artifacts"
        inputs:
          PathtoPublish: $(System.DefaultWorkingDirectory)\NugetRootFinal
          ArtifactName: "V8Jsi-final-nuget"
