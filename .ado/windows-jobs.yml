parameters:
  - name: isPublish
    type: boolean
    default : false
  - name: BuildMatrix
    type: object
    default : 
      - Name: Desktop|x64|Debug
        BuildConfiguration: Debug
        BuildPlatform: x64
        AppPlatform: win32
      - Name: Desktop|x86|Debug:
        BuildConfiguration: Debug
        BuildPlatform: x86
        AppPlatform: win32
      - Name: Desktop|ARM64|Debug:
        BuildConfiguration: Debug
        BuildPlatform: arm64
        AppPlatform: win32
      - Name: Desktop|x64|Release:
        BuildConfiguration: Release
        BuildPlatform: x64
        AppPlatform: win32
      - Name: Desktop|x86|Release:
        BuildConfiguration: Release
        BuildPlatform: x86
        AppPlatform: win32
      - Name: Desktop|ARM64|Release:
        BuildConfiguration: Release
        BuildPlatform: arm64
        AppPlatform: win32

jobs:

  - ${{ each matrix in parameters.BuildMatrix }}:
    - job: V8JsiBuild$ {{ matrix.Name }}
      timeoutInMinutes: 300
      variables:
        - name: Packaging.EnableSBOMSigning
          value: ${{ startsWith(variables['System.CollectionUri'], 'https://dev.azure.com/microsoft') }}
      displayName: Build v8jsi.dll
      ${{ if parameters.isPublish }}:
        templateContext:
          outputs:
            - output: buildArtifacts
              PathtoPublish: $(Build.ArtifactStagingDirectory)
              ArtifactName: V8Jsi
      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.x'
            addToPath: true
            architecture: 'x64'

        - template: windows-build.yml
          parameters:
            outputPath: $(Build.ArtifactStagingDirectory)
            appPlatform: $(AppPlatform)
            isPublish: ${{ parameters.isPublish }}

  - job: V8JsiPublishNuget
    condition: not(eq(variables['Build.Reason'], 'PullRequest'))
    dependsOn:
      - ${{ each matrix in parameters.BuildMatrix }}:
        - V8JsiBuild$ {{ matrix.Name }}
    displayName: Publish Nuget
    ${{ if parameters.isPublish }}:
      templateContext:
        outputs:
          - output: pipelineArtifact
            targetPath: $(System.DefaultWorkingDirectory)\NugetRootFinal
            artifactName: "V8Jsi-final-nuget"

    steps:
      - checkout: none

      - task: NuGetToolInstaller@0
        inputs:
          versionSpec: ">=4.6.0"

      - task: DownloadBuildArtifacts@0
        displayName: Download Build outputs
        inputs:
          artifactName: V8Jsi
          downloadPath: $(System.DefaultWorkingDirectory)

      # Make symbols available through http://symweb.
      - task: PublishSymbols@2
        displayName: Publish symbols
        inputs:
          UseNetCoreClientTool: true
          SearchPattern: $(System.DefaultWorkingDirectory)/**/*.pdb
          SymbolServerType: TeamServices

      - task: PowerShell@2
        displayName: Set version variables
        inputs:
          targetType: 'inline'
          script: |
            $config = Get-Content (Join-Path $(System.DefaultWorkingDirectory) "V8Jsi\config.json") | ConvertFrom-Json
            $Version = $config.version
            Write-Host "##vso[task.setvariable variable=Version]$Version"
            Write-Host "##vso[task.setvariable variable=VersionDetails]V8 version: $Version; Git revision: $(Build.SourceVersion)"

      - task: NuGetCommand@2
        displayName: 'NuGet Pack'
        inputs:
          command: pack
          packagesToPack: $(System.DefaultWorkingDirectory)\V8Jsi\ReactNative.V8Jsi.Windows.nuspec
          packDestination: $(System.DefaultWorkingDirectory)\NugetRootFinal
          buildProperties: CommitId=$(Build.SourceVersion);nugetroot=$(System.DefaultWorkingDirectory)\V8Jsi;RepoUri=$(Build.Repository.Uri);VersionDetails=$(VersionDetails)
          versioningScheme: byEnvVar
          versionEnvVar: Version
          includeSymbols: false

      - pwsh: |
          if ((Get-ChildItem $(System.DefaultWorkingDirectory)\NugetRootFinal\*nupkg).Count -lt 1) {
            Write-Error 'No NUPKG generated'
          }
        displayName: Verify NuGet packages creation

      - ${{ if not(parameters.isPublish) }}:
        - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
          displayName: ðŸ“’ Generate Manifest NuGet
          condition: not(eq(variables['Build.Reason'], 'PullRequest'))
          inputs:
            BuildDropPath: $(System.DefaultWorkingDirectory)\NugetRootFinal

        - task: PublishBuildArtifacts@1
          displayName: "Publish final nuget artifacts"
          inputs:
            PathtoPublish: $(System.DefaultWorkingDirectory)\NugetRootFinal
            ArtifactName: "V8Jsi-final-nuget"
