# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: 0.0.$(Date:yyMM.d)$(Rev:rrr)

trigger:
- master

pr:
  - master

pool:
  vmImage: 'windows-latest'

jobs:
  - job: V8JsiBuild
    timeoutInMinutes: 150
    displayName: Build the v8jsi.dll binary for supported architectures and flavors
    strategy:
      matrix:
        X64Debug:
          BuildConfiguration: Debug
          BuildPlatform: x64
          AppPlatform: win32
        X86Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
          AppPlatform: win32
        X64Release:
          BuildConfiguration: Release
          BuildPlatform: x64
          AppPlatform: win32
        X86Release:
          BuildConfiguration: Release
          BuildPlatform: x86
          AppPlatform: win32
        UWPX64Debug:
          BuildConfiguration: Debug
          BuildPlatform: x64
          AppPlatform: uwp
        UWPX86Debug:
          BuildConfiguration: Debug
          BuildPlatform: x86
          AppPlatform: uwp
        UWPARM64Debug:
          BuildConfiguration: Debug
          BuildPlatform: arm64
          AppPlatform: uwp
        UWPX64Release:
          BuildConfiguration: Release
          BuildPlatform: x64
          AppPlatform: uwp
        UWPX86Release:
          BuildConfiguration: Release
          BuildPlatform: x86
          AppPlatform: uwp
        UWPARM64Release:
          BuildConfiguration: Release
          BuildPlatform: arm64
          AppPlatform: uwp

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '2.x'
          addToPath: true
          architecture: 'x64'
      - template: .ado/build-dll.yml
        parameters:
          outputPath: $(Build.ArtifactStagingDirectory)
          appPlatform: $(AppPlatform)

  - job: V8JsiPublishNuget
    dependsOn:
      - V8JsiBuild
    displayName: Publish Nuget
    steps:
      - checkout: none

      # The commit tag in the nuspec requires that we use at least nuget 4.6
      - task: NuGetToolInstaller@0
        inputs:
          versionSpec: ">=4.6.0"

      - task: DownloadBuildArtifacts@0
        displayName: Download Build outputs
        inputs:
          artifactName: V8Jsi
          downloadPath: $(System.DefaultWorkingDirectory)

      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            $config = Get-Content (Join-Path $(System.DefaultWorkingDirectory) "V8Jsi\config.json") | Out-String | ConvertFrom-Json
            $Version = $config.version
            Write-Host "##vso[task.setvariable variable=Version]$Version"

      # Disabled for now until we figure out the right set of variables
      #- task: PublishSymbols@2
      #  inputs:
      #    SymbolsFolder: '$(System.DefaultWorkingDirectory)\V8Jsi\'
      #    SearchPattern: 'lib/**/*.pdb'
      #    SymbolServerType: 'TeamServices'

      - task: NuGetCommand@2
        displayName: 'NuGet Pack'
        inputs:
          command: 'custom'
          arguments: 'pack $(System.DefaultWorkingDirectory)\V8Jsi\ReactNative.V8Jsi.Windows.nuspec -NonInteractive -OutputDirectory $(System.DefaultWorkingDirectory)\NugetRootFinal -Properties CommitId=$(Build.SourceVersion);nugetroot=$(System.DefaultWorkingDirectory)\V8Jsi;RepoUri=$(Build.Repository.Uri) -Symbols -SymbolPackageFormat snupkg -version $(Version) -Verbosity Detailed'

      - task: PublishBuildArtifacts@1
        displayName: "Publish final nuget artifacts"
        inputs:
          PathtoPublish: $(System.DefaultWorkingDirectory)\NugetRootFinal
          ArtifactName: "V8Jsi-final-nuget"